spring.application.name=MagicStoryBook
spring.datasource.url=jdbc:postgresql://postgresql://magicstorybook_user:sklQFzh9NSnRrcbbDdCDWPwefOCYC3dy@dpg-cqn4lb5svqrc73fjc5vg-a.oregon-postgres.render.com:5432/magicstorybook?user=magicstorybook_user&password=sklQFzh9NSnRrcbbDdCDWPwefOCYC3dy
#spring.datasource.username=magicstorybook_user
#spring.datasource.password=sklQFzh9NSnRrcbbDdCDWPwefOCYC3dy
spring.datasource.driverClassName=org.postgresql.Driver



#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

server.port=8081

#logging.level.root=DEBUG


#lsof -i :8081
#kill -9 1234


spring.security.oauth2.client.registration.google.client-id=${CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${SECRET_ID}
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8081/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email

spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

openai.api.key=${OPENAI_API_KEY}





